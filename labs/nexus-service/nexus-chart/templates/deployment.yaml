apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  generation: 1
  labels:
    app: {{ .Values.nexusServiceName }}
  name: {{ .Values.nexusServiceName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.nexusServiceName }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: {{ .Values.nexusServiceName }}
        deployment: {{ .Values.nexusServiceName }}
    spec:
      containers:
      - env:
        - name: INSTALL4J_ADD_VM_PARAMS
          value: REPLACE_JVM_OPTS
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - 'curl -siu admin:$(cat /nexus-data/admin.password) http://localhost:8081/service/metrics/healthcheck
              | grep healthy | grep true

              '
          failureThreshold: 3
          initialDelaySeconds: REPLACE_DELAY
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: REPLACE_TIMEOUT
        name: {{ .Values.nexusServiceName }}
        ports:
        - containerPort: 8081
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - 'curl -siu admin:$(cat /nexus-data/admin.password) http://localhost:8081/service/metrics/ping
              | grep pong

              '
          failureThreshold: 3
          initialDelaySeconds: REPLACE_DELAY
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: REPLACE_TIMEOUT
        resources:
          limits:
            cpu: '1'
            memory: {{ .Values.memoryLimit }}
          requests:
            cpu: 500m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: REPLACE_VOLUME_MOUNT
          name: REPLACE_VOLUME_NAME
        image: nexus3:latest
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: REPLACE_VOLUME_NAME
        persistentVolumeClaim:
          claimName: REPLACE_CLAIM_NAME
